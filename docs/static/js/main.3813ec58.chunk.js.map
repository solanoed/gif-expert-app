{"version":3,"sources":["Components/AddCategory.js","helpers/getGifs.js","Components/GifGridItem.js","Components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","console","log","className","type","value","onChange","target","placeholder","getGifs","category","a","url","encodeURI","fetch","res","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAEaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEzB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OACI,uBAAOC,SAXU,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAIP,GAAJ,mBAAkBO,OACpCN,EAAc,KAElBO,QAAQC,IAAIT,IAKZ,UACI,oBAAIU,UAAU,wCAAd,0BACA,uBACIA,UAAW,oCACXC,KAAK,OACLC,MAAOZ,EACPa,SArBc,SAACV,GACvBF,EAAcE,EAAEW,OAAOF,QAqBfG,YAAY,wD,+BC5BfC,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEmCC,UAAUH,GAF7C,+DAGDI,MAAMF,GAHL,cAGbG,EAHa,gBAIEA,EAAIC,OAJN,uBAIZC,EAJY,EAIZA,KACDC,EAAOD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,EACzB,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QAGzCX,QAAQC,IAAIgB,GAZO,kBAaZA,GAbY,4CAAH,sDCEPO,EAAc,SAAC,GAAqB,EAAnBJ,GAAoB,IAAjBC,EAAgB,EAAhBA,MAAMV,EAAU,EAAVA,IAEnC,OACI,sBAAKT,UAAU,yCAAf,UACI,4BAAImB,IACJ,qBAAKI,IAAMd,EAAMe,IAAML,QCFtBM,EAAU,SAAC,GAAgB,IAAflB,EAAc,EAAdA,SAOrB,ECRwB,SAACA,GAEzB,MAA0BlB,mBACvB,CAAEyB,KAAK,GACNY,SAAQ,IAFZ,mBAAOC,EAAP,KAAcC,EAAd,KA6BA,OAzBAC,qBAAW,WAGPvB,EAASC,GACRuB,MAAK,SAAAC,GAEEH,EAAS,CACLd,KAAKiB,EACLL,SAAQ,SAMrB,CAACnB,IAWGoB,EDvBuBK,CAAazB,GAA/Ba,EAAZ,EAAON,KAAYY,EAAnB,EAAmBA,QAGnB,OACI,qCACI,oBAAI1B,UAAU,8CAAd,SAA8DO,IAC7DmB,GAAW,mBAAG1B,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SAGQoB,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEIA,GADCA,EAAIC,aEalBe,EAjCM,WAEjB,MAAoC5C,mBAAS,CAAC,gBAA9C,mBAAO6C,EAAP,KAAmB9C,EAAnB,KASA,OACI,gCACI,oBAAIY,UAAU,UAAd,iDACA,oBAAIA,UAAU,+CAAd,0BACA,cAAC,EAAD,CAAaZ,cAAeA,IAC5B,uBAEA,6BAEQ8C,EAAWlB,KAAI,SAAAT,GAAQ,OACnB,cAAC,EAAD,CAEAA,SAAWA,GADNA,Y,MCpB7B4B,IAASC,OAEL,cAAC,EAAD,IAEFC,SAASC,eAAe,W","file":"static/js/main.3813ec58.chunk.js","sourcesContent":["import React ,{useState}from 'react'\r\nimport PropTypes from 'prop-types'\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setinputValue] = useState(\"\")\r\n\r\n    const handleInputChange = (e) =>{\r\n        setinputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats =>[inputValue,...cats]);\r\n            setinputValue(\"\")\r\n        }\r\n        console.log(inputValue)\r\n    }\r\n\r\n\r\n    return (\r\n        <form  onSubmit={handleSubmit}>\r\n            <h2 className=\"animate__animated animate__fadeInLeft\" >Add Category</h2>\r\n            <input\r\n                className =\"animate__animated animate__fadeIn\"\r\n                type=\"text\"\r\n                value={inputValue}\r\n                onChange={handleInputChange}\r\n                placeholder=\"   üîçÔ∏èType something to look for\"\r\n            />\r\n        </form>\r\n    )\r\n    \r\n}\r\nAddCategory.propTypes = {\r\n    setCategories : PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async(category) => {\r\n    \r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=2cA5TdgJXQertzHuG6Oi2QfNRD61gpmu`;\r\n    const res = await fetch(url);\r\n    const {data} = await res.json();\r\n    const gifs = data.map(img => {\r\n        return{\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    console.log(gifs)\r\n    return gifs;\r\n    \r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {id,title,url} ) => {\r\n    // console.log(id,title, url);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <p>{title}</p>\r\n            <img src={ url } alt={ title } ></img>\r\n            \r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport {  useFetchGifs } from '../hooks/useFetchGifs'\r\n//  \r\nimport { GifGridItem } from './GifGridItem'\r\n\r\nexport const GifGrid = ({category}) => {\r\n    \r\n    // const [images, setImages] = useState([])\r\n\r\n    // useEffect(()=>{\r\n    //     getGifs(category).then(setImages);\r\n    // } ,[category])\r\n    const {data:images,loading} = useFetchGifs(category);\r\n    \r\n    // getGifs();\r\n    return (\r\n        <>\r\n            <h3 className=\"title animate__animated animate__fadeInDown\" >{category}</h3>\r\n            {loading && <p className=\"animate__animated animate__pulse\" >Loading</p>}\r\n            <div className=\"card-grid\">\r\n                \r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem \r\n                        key={img.id}\r\n                        {...img}\r\n                        \r\n                        />\r\n                    ) )\r\n                }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs} from \"../helpers/getGifs\";\r\n\r\n\r\nexport const useFetchGifs = (category)=> {\r\n\r\n    const [state, setstate] = useState(\r\n       { data:[],\r\n        loading:true});\r\n    //Efectos no pueden ser Async\r\n    useEffect( ()=> {\r\n        \r\n\r\n        getGifs( category )\r\n        .then(imgs=>{\r\n           \r\n                setstate({\r\n                    data:imgs,\r\n                    loading:false\r\n                });\r\n                \r\n           \r\n        })\r\n\r\n    } ,[category])\r\n\r\n\r\n    // setTimeout(() => {\r\n    //     setstate({ \r\n    //         data:[1,2,3,4,5],\r\n    //         loading:false\r\n    //         })\r\n    // }, 3000);\r\n\r\n\r\n    return state; \r\n};\r\n\r\n   \r\n\r\n\r\n\r\n\r\n","import React ,{useState} from 'react'\r\nimport { AddCategory } from './Components/AddCategory'\r\nimport { GifGrid } from './Components/GifGrid'\r\n\r\nconst GifExpertApp = () => {\r\n    \r\n    const [categories, setCategories] = useState([\"Dragon Ball\"])\r\n    // const handleAdd = ()=>{\r\n    //     //Mi solucion\r\n    //     // setCategories(categories.concat(\"Pokemon\"));\r\n    //     //Solucion del profesor\r\n    //     setCategories([...categories,\"Pokemon\"])\r\n    // }\r\n    // console.log(categories)\r\n    \r\n    return (\r\n        <div>\r\n            <h2 className=\"message\">Made with ‚ù§Ô∏è by Letreveux</h2>\r\n            <h2 className=\"title1 animate__animated animate__fadeInDown\">GifExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}/>\r\n            <hr></hr>\r\n            {/* <button onClick={handleAdd} >Agregar</button> */}\r\n            <ol>\r\n                {\r\n                    categories.map(category =>\r\n                        <GifGrid \r\n                        key={category}\r\n                        category ={category}\r\n                        />                        \r\n                    )\r\n                }\r\n            </ol>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GifExpertApp\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n\n    <GifExpertApp />\n  ,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}